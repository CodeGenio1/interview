/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /** Frontend */
    get: operations["getIndex"];
  };
  "/leaderboard": {
    /** Frontend */
    get: operations["getLeaderboard"];
  };
  "/me": {
    /** Return the connect user profile */
    get: operations["getMe"];
  };
  "/users/{username}": {
    /** Return a public profile */
    get: operations["getUserProfile"];
    parameters: {
      path: {
        /** @description Profile username */
        username: string;
      };
    };
  };
  "/like-score": {
    /** Like a score */
    post: operations["likeScore"];
  };
  "/unlike-score": {
    /** Unlike a score */
    post: operations["unlikeScore"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description An API Error response */
    Error: {
      /** @description A printable message for this error */
      message?: string;
    };
    /** @description An API Success response */
    Success: {
      /** @description A printable message */
      message: string;
      /** @description A data suppose to be returned to frontend */
      data?: Record<string, never>;
    };
    /** @description User public profile */
    User: {
      /** @description User unique identifier */
      id?: string;
      /** @description User username */
      username?: string;
    };
    /** @description Score of a user */
    Score: {
      /** @description Score unique identifier */
      id?: string;
      /** @description Title of the score */
      title?: string;
      /**
       * Format: date-time
       * @description Date when the score was created
       */
      creationDate?: string;
      /**
       * @description Privacy of the score
       * @enum {string}
       */
      privacy?: "public" | "private";
    };
    /** @description Likes of Users to Scores */
    ScoreUserLike: {
      /** @description Unique identifier */
      id?: string;
      /** @description ID of User who liked the score */
      userId?: string;
      /** @description ID of Score that is being liked by user */
      scoreId?: string;
      /** @description Date when user has liked the score */
      createdAt?: Record<string, never>;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Frontend */
  getIndex: {
    responses: {
      /** @description Home Page */
      200: {
        content: {
          "text/html": string;
        };
      };
    };
  };
  /** Frontend */
  getLeaderboard: {
    responses: {
      /** @description Home Page */
      200: {
        content: {
          "text/html": string;
        };
      };
    };
  };
  /** Return the connect user profile */
  getMe: {
    responses: {
      /** @description User profile */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Return a public profile */
  getUserProfile: {
    parameters: {
      path: {
        /** @description Profile username */
        username: string;
      };
    };
    responses: {
      /** @description User profile */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      /** @description User not found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** @description Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Like a score */
  likeScore: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScoreUserLike"];
      };
    };
    responses: {
      /** @description Add Like */
      200: {
        content: {
          "application/json": components["schemas"]["ScoreUserLike"];
        };
      };
      /** @description Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Unlike a score */
  unlikeScore: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScoreUserLike"];
      };
    };
    responses: {
      /** @description Success */
      200: {
        content: {
          "application/json": components["schemas"]["Success"];
        };
      };
      /** @description Error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
}
