openapi: 3.0.2
info:
  title: I Love Music API
  version: 1.0.0
servers:
- url: http://localhost:3333/v1

components:
  securitySchemes:
    basicScheme:
      type: apiKey
      description: Basic authentication
      name: authorization
      in: header
  schemas:
    Error:
      description: An API Error response
      type: object
      properties:
        message:
          type: string
          description: A printable message for this error
    Success:
      description: An API Success response
      type: object
      properties:
        message:
          type: string
          description: A printable message
        data: 
          type: object
          description: A data suppose to be returned to frontend
      required:
        [message]
    User:
      description: User public profile
      type: object
      properties:
        id:
          type: string
          description: User unique identifier
        username:
          type: string
          description: User username
    Score:
      description: Score of a user
      type: object
      properties:
        id:
          type: string
          description: Score unique identifier
        title:
          type: string
          description: Title of the score
        creationDate:
          type: string
          format: date-time
          description: Date when the score was created
        privacy:
          type: string
          description: Privacy of the score
          enum: [public, private]
    ScoreUserLike:
      description: Likes of Users to Scores
      type: object
      properties:
        id:
          type: string
          description: Unique identifier
        userId:
          type: string
          description: ID of User who liked the score
        scoreId:
          type: string
          description: ID of Score that is being liked by user
paths:
  /:
    get:
      summary: Frontend
      operationId: getIndex
      x-security-required: false
      responses:
        '200':
          description: Home Page
          content:
            text/html:
              schema:
                type: string
  /me:
    get:
      summary: Return the connect user profile
      operationId: getMe
      responses:
        200:
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicScheme: []
  /users/{username}:
    parameters:
    - name: username
      in: path
      description: Profile username
      required: true
      schema:
        type: string
    get:
      summary: Return a public profile
      operationId: getUserProfile
      responses:
        200:
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicScheme: []
      x-security-required: false
  /like-score:
    post:
      summary: Like a score
      operationId: likeScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreUserLike'
      responses:
        '200':
          description: Add Like
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreUserLike'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicScheme: []
  /unlike-score:
    post:
      summary: Unlike a score
      operationId: unlikeScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreUserLike'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - basicScheme: []